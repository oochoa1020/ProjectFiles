
LEDMATRIX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000002f8  0000038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  00000390  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000400  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a3b  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088f  00000000  00000000  00000e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000448  00000000  00000000  00001712  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000449  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000256  00000000  00000000  00002039  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000228f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c0       	rjmp	.+218    	; 0x110 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ef       	ldi	r30, 0xF8	; 248
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 30       	cpi	r26, 0x09	; 9
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	73 d0       	rcall	.+230    	; 0x1aa <main>
  c4:	17 c1       	rjmp	.+558    	; 0x2f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
void TimerOff() {
	TCCR1B = 0x00;
}

void TimerISR() {
	TimerFlag = 1;
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ce:	8d e7       	ldi	r24, 0x7D	; 125
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  f8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
  fc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 100:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 104:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <__vector_13>:
}

ISR(TIMER1_COMPA_vect) {
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 122:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 126:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 12a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 12e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	a1 09       	sbc	r26, r1
 136:	b1 09       	sbc	r27, r1
 138:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 13c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 140:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 144:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	if (_avr_timer_cntcurr == 0) {
 148:	89 2b       	or	r24, r25
 14a:	8a 2b       	or	r24, r26
 14c:	8b 2b       	or	r24, r27
 14e:	99 f4       	brne	.+38     	; 0x176 <__vector_13+0x66>
void TimerOff() {
	TCCR1B = 0x00;
}

void TimerISR() {
	TimerFlag = 1;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>

ISR(TIMER1_COMPA_vect) {
	_avr_timer_cntcurr--;
	if (_avr_timer_cntcurr == 0) {
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 166:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 16a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 16e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 172:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	}
}
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <TimerSet>:

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 188:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 18c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 190:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 194:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 198:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 19c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 1a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 1a4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 1a8:	08 95       	ret

000001aa <main>:
unsigned char Vert[] = {0b11111110, 0b11111101, 0b11111011, 0b11110111, 0b11101111, 0b11011111, 0b10111111, 0b01111111};
unsigned char ex = 0b00001000;
unsigned char ex2 = 0b10000000;
int main(void)
{
    DDRB = 0xFF; PORTB = 0x00;
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	84 b9       	out	0x04, r24	; 4
 1ae:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00;
 1b0:	8a b9       	out	0x0a, r24	; 10
 1b2:	1b b8       	out	0x0b, r1	; 11
	TimerSet(50);
 1b4:	62 e3       	ldi	r22, 0x32	; 50
 1b6:	70 e0       	ldi	r23, 0x00	; 0
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	e5 df       	rcall	.-54     	; 0x188 <TimerSet>
	TimerOn();
 1be:	84 df       	rcall	.-248    	; 0xc8 <TimerOn>
 1c0:	4e ef       	ldi	r20, 0xFE	; 254
    {
		
		
		//Diagonal
		//PORTB = 0b00000001;
		PORTD = 0b11111110;
 1c2:	91 e0       	ldi	r25, 0x01	; 1
		
		for (unsigned int i = 0; i < 8; ++i){
			PORTB = 0b00000001;
 1c4:	79 2f       	mov	r23, r25
 1c6:	6f e7       	ldi	r22, 0x7F	; 127
		}
		
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000001;
			PORTD = 0b01111111;
 1c8:	52 e0       	ldi	r21, 0x02	; 2
				}
			}
		}
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000010;
 1ca:	4b b9       	out	0x0b, r20	; 11
    {
		
		
		//Diagonal
		//PORTB = 0b00000001;
		PORTD = 0b11111110;
 1cc:	e8 e0       	ldi	r30, 0x08	; 8
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	75 b9       	out	0x05, r23	; 5
		
		for (unsigned int i = 0; i < 8; ++i){
			PORTB = 0b00000001;
 1d2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
			while (!TimerFlag);
 1d6:	88 23       	and	r24, r24
 1d8:	e1 f3       	breq	.-8      	; 0x1d2 <main+0x28>
 1da:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
			TimerFlag = 0;
 1de:	85 b1       	in	r24, 0x05	; 5
			for (unsigned int j = 0; j < 8; ++j){
				PORTB = PORTB << 1;
 1e0:	88 0f       	add	r24, r24
 1e2:	85 b9       	out	0x05, r24	; 5
 1e4:	27 e0       	ldi	r18, 0x07	; 7
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
				//PORTD = PORTD << 1;
				//++PORTD;
				if (j == 7){}
				else{
				while (!TimerFlag);
 1ec:	88 23       	and	r24, r24
 1ee:	e1 f3       	breq	.-8      	; 0x1e8 <main+0x3e>
 1f0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
				TimerFlag = 0;
 1f4:	85 b1       	in	r24, 0x05	; 5
		for (unsigned int i = 0; i < 8; ++i){
			PORTB = 0b00000001;
			while (!TimerFlag);
			TimerFlag = 0;
			for (unsigned int j = 0; j < 8; ++j){
				PORTB = PORTB << 1;
 1f6:	88 0f       	add	r24, r24
 1f8:	85 b9       	out	0x05, r24	; 5
 1fa:	21 50       	subi	r18, 0x01	; 1
 1fc:	31 09       	sbc	r19, r1
 1fe:	a1 f7       	brne	.-24     	; 0x1e8 <main+0x3e>
				//PORTD = PORTD << 1;
				//++PORTD;
				if (j == 7){}
 200:	8b b1       	in	r24, 0x0b	; 11
				else{
				while (!TimerFlag);
				TimerFlag = 0;
				}
			}
			PORTD = PORTD << 1;
 202:	88 0f       	add	r24, r24
 204:	8b b9       	out	0x0b, r24	; 11
 206:	8b b1       	in	r24, 0x0b	; 11
			++PORTD;
 208:	8f 5f       	subi	r24, 0xFF	; 255
 20a:	8b b9       	out	0x0b, r24	; 11
 20c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
			while (!TimerFlag);
 210:	88 23       	and	r24, r24
 212:	e1 f3       	breq	.-8      	; 0x20c <main+0x62>
 214:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
			TimerFlag = 0;
 218:	31 97       	sbiw	r30, 0x01	; 1
 21a:	d1 f6       	brne	.-76     	; 0x1d0 <main+0x26>
		
		//Diagonal
		//PORTB = 0b00000001;
		PORTD = 0b11111110;
		
		for (unsigned int i = 0; i < 8; ++i){
 21c:	66 c0       	rjmp	.+204    	; 0x2ea <main+0x140>
 21e:	95 b9       	out	0x05, r25	; 5
			TimerFlag = 0;
		}
		
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000001;
 220:	6b b9       	out	0x0b, r22	; 11
			PORTD = 0b01111111;
 222:	30 97       	sbiw	r30, 0x00	; 0
			unsigned int k = j;
			while (k != 0) {
 224:	41 f0       	breq	.+16     	; 0x236 <main+0x8c>
 226:	9f 01       	movw	r18, r30
 228:	8b b1       	in	r24, 0x0b	; 11
				PORTD = PORTD >> 1;
 22a:	86 95       	lsr	r24
 22c:	8b b9       	out	0x0b, r24	; 11
 22e:	5f 9a       	sbi	0x0b, 7	; 11
				PORTD |= 0b10000000;
 230:	21 50       	subi	r18, 0x01	; 1
				--k;
 232:	31 09       	sbc	r19, r1
 234:	c9 f7       	brne	.-14     	; 0x228 <main+0x7e>
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000001;
			PORTD = 0b01111111;
			unsigned int k = j;
			while (k != 0) {
 236:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
				PORTD = PORTD >> 1;
				PORTD |= 0b10000000;
				--k;
			}
			while (!TimerFlag);
 23a:	88 23       	and	r24, r24
 23c:	e1 f3       	breq	.-8      	; 0x236 <main+0x8c>
 23e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
			TimerFlag = 0;
 242:	28 e0       	ldi	r18, 0x08	; 8
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	85 b1       	in	r24, 0x05	; 5
			for (unsigned int i = 0; i < 8; ++i){
				PORTB = PORTB << 1;
 248:	88 0f       	add	r24, r24
 24a:	85 b9       	out	0x05, r24	; 5
 24c:	8b b1       	in	r24, 0x0b	; 11
				if (PORTD != 0b10000000){
 24e:	80 38       	cpi	r24, 0x80	; 128
 250:	31 f0       	breq	.+12     	; 0x25e <main+0xb4>
 252:	8b b1       	in	r24, 0x0b	; 11
					PORTD = PORTD << 1;
 254:	88 0f       	add	r24, r24
 256:	8b b9       	out	0x0b, r24	; 11
 258:	8b b1       	in	r24, 0x0b	; 11
					++PORTD;
 25a:	8f 5f       	subi	r24, 0xFF	; 255
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	21 30       	cpi	r18, 0x01	; 1
				}
				if (i != 7){
 260:	31 05       	cpc	r19, r1
 262:	49 f0       	breq	.+18     	; 0x276 <main+0xcc>
 264:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
					while (!TimerFlag);
 268:	88 23       	and	r24, r24
 26a:	e1 f3       	breq	.-8      	; 0x264 <main+0xba>
 26c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
					TimerFlag = 0;
 270:	21 50       	subi	r18, 0x01	; 1
 272:	31 09       	sbc	r19, r1
 274:	41 f7       	brne	.-48     	; 0x246 <main+0x9c>
				PORTD |= 0b10000000;
				--k;
			}
			while (!TimerFlag);
			TimerFlag = 0;
			for (unsigned int i = 0; i < 8; ++i){
 276:	31 96       	adiw	r30, 0x01	; 1
			while (!TimerFlag);
			TimerFlag = 0;
		}
		
		
		for (unsigned int j = 0; j < 8; ++j){
 278:	e8 30       	cpi	r30, 0x08	; 8
 27a:	f1 05       	cpc	r31, r1
 27c:	81 f6       	brne	.-96     	; 0x21e <main+0x74>
 27e:	30 c0       	rjmp	.+96     	; 0x2e0 <main+0x136>
 280:	55 b9       	out	0x05, r21	; 5
				}
			}
		}
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000010;
 282:	4b b9       	out	0x0b, r20	; 11
			PORTD = 0b11111110;
 284:	30 97       	sbiw	r30, 0x00	; 0
			unsigned int k = j;
			while (k != 0) {
 286:	39 f0       	breq	.+14     	; 0x296 <main+0xec>
 288:	9f 01       	movw	r18, r30
 28a:	85 b1       	in	r24, 0x05	; 5
				PORTB = PORTB << 1;
 28c:	88 0f       	add	r24, r24
 28e:	85 b9       	out	0x05, r24	; 5
 290:	21 50       	subi	r18, 0x01	; 1
				--k;
 292:	31 09       	sbc	r19, r1
 294:	d1 f7       	brne	.-12     	; 0x28a <main+0xe0>
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000010;
			PORTD = 0b11111110;
			unsigned int k = j;
			while (k != 0) {
 296:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
				PORTB = PORTB << 1;
				--k;
			}
			while (!TimerFlag);
 29a:	88 23       	and	r24, r24
 29c:	e1 f3       	breq	.-8      	; 0x296 <main+0xec>
 29e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
			TimerFlag = 0;
 2a2:	28 e0       	ldi	r18, 0x08	; 8
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	85 b1       	in	r24, 0x05	; 5
			for (unsigned int i = 0; i < 8; ++i){
				if (PORTB != 0b10000000){
 2a8:	80 38       	cpi	r24, 0x80	; 128
 2aa:	49 f0       	breq	.+18     	; 0x2be <main+0x114>
 2ac:	85 b1       	in	r24, 0x05	; 5
					PORTB = PORTB << 1;
 2ae:	88 0f       	add	r24, r24
 2b0:	85 b9       	out	0x05, r24	; 5
 2b2:	8b b1       	in	r24, 0x0b	; 11
					PORTD = PORTD << 1;
 2b4:	88 0f       	add	r24, r24
 2b6:	8b b9       	out	0x0b, r24	; 11
 2b8:	8b b1       	in	r24, 0x0b	; 11
					++PORTD;
 2ba:	8f 5f       	subi	r24, 0xFF	; 255
 2bc:	8b b9       	out	0x0b, r24	; 11
 2be:	21 30       	cpi	r18, 0x01	; 1
				}
				if (i != 7){
 2c0:	31 05       	cpc	r19, r1
 2c2:	49 f0       	breq	.+18     	; 0x2d6 <main+0x12c>
 2c4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
					while (!TimerFlag);
 2c8:	88 23       	and	r24, r24
 2ca:	e1 f3       	breq	.-8      	; 0x2c4 <main+0x11a>
 2cc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
					TimerFlag = 0;
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	31 09       	sbc	r19, r1
 2d4:	41 f7       	brne	.-48     	; 0x2a6 <main+0xfc>
				PORTB = PORTB << 1;
				--k;
			}
			while (!TimerFlag);
			TimerFlag = 0;
			for (unsigned int i = 0; i < 8; ++i){
 2d6:	31 96       	adiw	r30, 0x01	; 1
					TimerFlag = 0;
				}
			}
		}
		
		for (unsigned int j = 0; j < 8; ++j){
 2d8:	e8 30       	cpi	r30, 0x08	; 8
 2da:	f1 05       	cpc	r31, r1
 2dc:	89 f6       	brne	.-94     	; 0x280 <main+0xd6>
 2de:	75 cf       	rjmp	.-278    	; 0x1ca <main+0x20>
 2e0:	55 b9       	out	0x05, r21	; 5
			PORTB = 0b00000010;
 2e2:	4b b9       	out	0x0b, r20	; 11
			PORTD = 0b11111110;
 2e4:	e0 e0       	ldi	r30, 0x00	; 0
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	d6 cf       	rjmp	.-84     	; 0x296 <main+0xec>
 2ea:	95 b9       	out	0x05, r25	; 5
			TimerFlag = 0;
		}
		
		
		for (unsigned int j = 0; j < 8; ++j){
			PORTB = 0b00000001;
 2ec:	6b b9       	out	0x0b, r22	; 11
			PORTD = 0b01111111;
 2ee:	e0 e0       	ldi	r30, 0x00	; 0
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	a1 cf       	rjmp	.-190    	; 0x236 <main+0x8c>

000002f4 <_exit>:
 2f4:	f8 94       	cli

000002f6 <__stop_program>:
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <__stop_program>
